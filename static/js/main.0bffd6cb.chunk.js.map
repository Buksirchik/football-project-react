{"version":3,"sources":["redux/selectors/index.ts","api/requests.ts","redux/actionTypes/index.ts","redux/actions/index.ts","components/FavoritePlayerList/images/flag.gif","components/FavoritePlayerList/FavoritePlayerList.tsx","components/FavoriteTeamList/images/flag.gif","components/FavoriteTeamList/FavoriteTeamsList.tsx","components/Profile/images/avatar.jpg","components/Profile/Profile.tsx","components/TableHeadCompetition/TableHeadCompetition.tsx","components/TeamForm/TeamForm.tsx","components/TableRowCompetition/images/flag.gif","components/TableRowCompetition/TableRowCompetition.tsx","components/Preloader/Preloader.tsx","components/TableCompetition/TableCompetition.tsx","components/TournamentList/TournamentList.tsx","components/FollowBtn/FollowBtn.tsx","components/UnfollowBtn/UnfollowBtn.tsx","components/PlayerCard/PlayerCard.tsx","components/TeamInfo/images/flag.gif","components/TeamInfo/TeamInfo.tsx","routes/PublicRoutes/PublicRoutes.tsx","components/MenuList/MenuList.tsx","components/ThemeSwitcher/images/moon.svg","components/ThemeSwitcher/images/sun.svg","components/ThemeSwitcher/ThemeSwitcher.tsx","components/Navigation/Navigation.tsx","components/Content/Content.tsx","App.tsx","redux/reducers/profileReducer.ts","redux/reducers/tournamentReducer.ts","redux/reducers/appReducer.ts","redux/reducers/index.ts","redux/index.ts","index.tsx"],"names":["getFavoriteTeamsSelector","state","profile","listFavoriteTeams","getFavoritePlayersSelector","listFavoritePlayers","getListTournamentsSelector","tournament","listTournaments","getTournamentInfoSelector","tournamentInfo","getTeamInfoSelector","teamInfo","getThemeSelector","app","theme","instance","axios","create","baseURL","headers","getTournaments","get","e","console","log","message","getTournamentStandings","id","getTeam","SET_TOURNAMENTS_LIST","SET_TOURNAMENT_INFO","SET_TEAM_INFO","ADD_FAVORITE_TEAM","DELETE_FAVORITE_TEAM","ADD_FAVORITE_PLAYER","DELETE_FAVORITE_PLAYER","TOGGLE_THEME","setTournamentsList","payload","type","setTournamentInfo","setTeamInfo","deleteFavoritePlayer","deleteFavoriteTeam","FavoritePlayersList","players","dispatch","useDispatch","className","map","player","clubIcon","name","clubName","position","src","flag","alt","onClick","FavoriteTeamsList","teams","team","crestUrl","Profile","favoritePlayers","useSelector","favoriteTeams","isEmptyPlayers","Object","values","length","isEmptyTeams","avatar","TableHeadCompetition","tournamentId","useParams","isNotCup","title","TeamForm","formArr","form","split","item","i","TableRowCompetition","tableRows","table","draw","lost","playedGames","points","goalDifference","goalsAgainst","goalsFor","won","to","flagTeam","Preloader","TableCompetition","useEffect","API","then","data","window","scrollTo","competition","standings","showTable","group","replace","TournamentList","tournaments","competitions","code","FollowBtn","UnfollowBtn","PlayerCard","props","dateOfBirth","nationality","role","isFavoritePlayer","Date","toLocaleDateString","defaultPlayer","TeamInfo","teamId","isFavorite","getTeamInfo","founded","venue","stadium","squad","Array","fill","key","routes","path","render","exact","PublicRoutes","route","links","MenuList","toggleMenu","link","ThemeSwitcher","newTheme","sun","aria-label","moon","Navigation","useState","isOpen","setToggleMenu","activeMenu","toggleMenuHandler","Content","children","App","initialState","rootReducer","combineReducers","action","playerId","persistConfig","whitelist","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bffd6cb.chunk.js","sourcesContent":["import { RootState } from \"./../reducers/index\";\r\n\r\nexport const getFavoriteTeamsSelector = (state: RootState) =>\r\n  state.profile.listFavoriteTeams;\r\nexport const getFavoritePlayersSelector = (state: RootState) =>\r\n  state.profile.listFavoritePlayers;\r\nexport const getListTournamentsSelector = (state: RootState) =>\r\n  state.tournament.listTournaments;\r\nexport const getTournamentInfoSelector = (state: RootState) =>\r\n  state.tournament.tournamentInfo;\r\nexport const getTeamInfoSelector = (state: RootState) =>\r\n  state.tournament.teamInfo;\r\nexport const getThemeSelector = (state: RootState) => state.app.theme;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.football-data.org/v2/\",\r\n  headers: { \"X-Auth-Token\": \"0de2b419cd614b6da622b89303e0c8ad\" },\r\n});\r\n\r\nexport const getTournaments = () => {\r\n  try {\r\n    return instance.get(\"/competitions?plan=TIER_ONE\");\r\n  } catch (e) {\r\n    console.log(e.message);\r\n  }\r\n};\r\n\r\nexport const getTournamentStandings = (id:number) => {\r\n  try {\r\n    return instance.get(`/competitions/${id}/standings?standingType=TOTAL`);\r\n  } catch (e) {\r\n    console.log(e.message);\r\n  }\r\n};\r\n\r\nexport const getTeam = (id:number) => {\r\n  try {\r\n    return instance.get(`teams/${id}/`);\r\n  } catch (e) {\r\n    console.log(e.message);\r\n  }\r\n};\r\n","export const SET_TOURNAMENTS_LIST = \"SET_TOURNAMENTS_LIST\";\r\nexport const SET_TOURNAMENT_INFO = \"SET_TOURNAMENT_INFO\";\r\nexport const SET_TEAM_INFO = \"SET_TEAM_INFO\";\r\nexport const ADD_FAVORITE_TEAM = \"ADD_FAVORITE_TEAM\";\r\nexport const DELETE_FAVORITE_TEAM = \"DELETE_FAVORITE_TEAM\";\r\nexport const ADD_FAVORITE_PLAYER = \"ADD_FAVORITE_PLAYER\";\r\nexport const DELETE_FAVORITE_PLAYER = \"DELETE_FAVORITE_PLAYER\";\r\nexport const TOGGLE_THEME = \"TOGGLE_THEME\";\r\n","import { Favorite } from \"./../reducers/profileReducer\";\r\nimport { ActionTypes } from \"./types\";\r\nimport { API } from \"../../api\";\r\nimport {\r\n  ADD_FAVORITE_TEAM,\r\n  ADD_FAVORITE_PLAYER,\r\n  DELETE_FAVORITE_PLAYER,\r\n  DELETE_FAVORITE_TEAM,\r\n  SET_TEAM_INFO,\r\n  SET_TOURNAMENTS_LIST,\r\n  SET_TOURNAMENT_INFO,\r\n  TOGGLE_THEME,\r\n} from \"../actionTypes\";\r\nimport {\r\n  TeamInfo,\r\n  TournamentInfo,\r\n  Tournament,\r\n} from \"../reducers/tournamentReducer\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nexport const getTournamentsList = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  null,\r\n  Action<string>\r\n> => (dispatch) => {\r\n  API.getTournaments()?.then(({ data }) => {\r\n    const { competitions } = data;\r\n    dispatch(setTournamentsList(competitions));\r\n  });\r\n};\r\n\r\nexport const getTournamentStandings = (\r\n  id: number\r\n): ThunkAction<void, RootState, null, Action<string>> => (dispatch) => {\r\n  console.log(typeof id)\r\n  API.getTournamentStandings(id)?.then(({ data }) => {\r\n    dispatch(setTournamentInfo(data));\r\n  });\r\n};\r\n\r\nexport const getTeamInfo = (\r\n  id: number\r\n): ThunkAction<void, RootState, null, Action<string>> => (dispatch) => {\r\n  API.getTeam(id)?.then(({ data }) => {\r\n    dispatch(setTeamInfo(data));\r\n  });\r\n};\r\n\r\nexport const setTournamentsList = (payload: Tournament[]): ActionTypes => ({\r\n  type: SET_TOURNAMENTS_LIST,\r\n  payload,\r\n});\r\n\r\nexport const setTournamentInfo = (payload: TournamentInfo): ActionTypes => ({\r\n  type: SET_TOURNAMENT_INFO,\r\n  payload,\r\n});\r\n\r\nexport const setTeamInfo = (payload: TeamInfo): ActionTypes => ({\r\n  type: SET_TEAM_INFO,\r\n  payload,\r\n});\r\n\r\nexport const addFavoritePlayer = (payload: Favorite): ActionTypes => ({\r\n  type: ADD_FAVORITE_PLAYER,\r\n  payload,\r\n});\r\n\r\nexport const addFavoriteTeam = (payload: Favorite): ActionTypes => ({\r\n  type: ADD_FAVORITE_TEAM,\r\n  payload,\r\n});\r\n\r\nexport const deleteFavoritePlayer = (payload: number): ActionTypes => ({\r\n  type: DELETE_FAVORITE_PLAYER,\r\n  payload,\r\n});\r\n\r\nexport const deleteFavoriteTeam = (payload: number): ActionTypes => ({\r\n  type: DELETE_FAVORITE_TEAM,\r\n  payload,\r\n});\r\n\r\nexport const toggleTheme = (payload: string): ActionTypes => ({\r\n  type: TOGGLE_THEME,\r\n  payload,\r\n});\r\n","export default __webpack_public_path__ + \"static/media/flag.f704db98.gif\";","import { useDispatch } from \"react-redux\";\r\nimport { deleteFavoritePlayer } from \"../../redux/actions\";\r\nimport \"./style.css\";\r\nimport flag from \"./images/flag.gif\";\r\nimport { Favorite } from \"../../redux/reducers/profileReducer\";\r\nimport { FC } from \"react\";\r\n\r\ntype PropTypes = {\r\n  players: Favorite[];\r\n};\r\n\r\nexport const FavoritePlayersList: FC<PropTypes> = ({ players }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n\r\n    <ul className=\"favorite-players\">\r\n      {players.map((player) => {\r\n        const { clubIcon, name, clubName, position, id } = player;\r\n        const unfollowHandler = () => dispatch(deleteFavoritePlayer(id));\r\n          \r\n        return (\r\n          <li className=\"favorite-player\" key={id}>\r\n            <div className=\"player__club-wrap\">\r\n              <img className=\"player__club\" src={clubIcon || flag} alt={name} />\r\n            </div>\r\n            <div className=\"player-info\">\r\n              <p className=\"player-info__text\">{name}</p>\r\n              <p className=\"player-info__text\">Club: {clubName}</p>\r\n              <p className=\"player-info__text\">Position: {position}</p>\r\n            </div>\r\n            <button className=\"unfollow-player\" onClick={unfollowHandler}>\r\n              &#10008;\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/flag.f704db98.gif\";","import { useDispatch } from \"react-redux\";\r\nimport { deleteFavoriteTeam } from \"../../redux/actions\";\r\nimport \"./style.css\";\r\nimport flag from \"./images/flag.gif\";\r\nimport { Favorite } from \"../../redux/reducers/profileReducer\";\r\nimport { FC } from \"react\";\r\n\r\ntype PropTypes = {\r\n  teams: Favorite[];\r\n};\r\n\r\nexport const FavoriteTeamsList: FC<PropTypes> = ({ teams }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className=\"favorite-teams\">\r\n      {teams.map((team) => {\r\n        const unfollowHandler = () => dispatch(deleteFavoriteTeam(id));\r\n        const { crestUrl, name, id } = team;\r\n        return (\r\n          <li className=\"favorite-team\" key={id}>\r\n            <div className=\"favorite-team__img-wrap\">\r\n              <img className=\"favorite-team__img\" src={crestUrl||flag} alt={name} />\r\n            </div>\r\n            <p className=\"favorite-team__name\">{name}</p>\r\n            <button className=\"unfollow-team\" onClick={unfollowHandler}>\r\n              &#10008;\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/avatar.c3f9f338.jpg\";","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { FavoriteItem } from \"../../redux/reducers/profileReducer\";\r\nimport {\r\n  getFavoritePlayersSelector,\r\n  getFavoriteTeamsSelector,\r\n} from \"../../redux/selectors\";\r\nimport { FavoritePlayersList } from \"../FavoritePlayerList\";\r\nimport { FavoriteTeamsList } from \"../FavoriteTeamList\";\r\nimport avatar from \"./images/avatar.jpg\";\r\nimport \"./style.css\";\r\n\r\nexport const Profile = () => {\r\n  const favoritePlayers = useSelector<RootState, FavoriteItem>(getFavoritePlayersSelector);\r\n  const favoriteTeams = useSelector<RootState, FavoriteItem>(getFavoriteTeamsSelector);\r\n  const isEmptyPlayers = !!Object.values(favoritePlayers).length;\r\n  const isEmptyTeams = !!Object.values(favoriteTeams).length;\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile-header\">\r\n        <div className=\"profile-avatar\">\r\n          <img className=\"profile-avatar__img\" src={avatar} alt=\"John Snow\" />\r\n        </div>\r\n      </div>\r\n      <p className=\"profile__name\">John Snow</p>\r\n\r\n      {isEmptyTeams ? (\r\n        <div className=\"following-teams\">\r\n          <h3 className=\"following__title\">Following teams</h3>\r\n          <FavoriteTeamsList teams={Object.values(favoriteTeams)} />\r\n        </div>\r\n      ) : null}\r\n\r\n      {isEmptyPlayers ? (\r\n        <div className=\"following-players\">\r\n          <h3 className=\"following__title\">Following players</h3>\r\n          <FavoritePlayersList players={Object.values(favoritePlayers)} />\r\n        </div>\r\n      ) : null}\r\n\r\n      {(isEmptyPlayers || isEmptyTeams) === true ? null : (\r\n        <p className=\"profile__text\">There aren't favorite players and teams</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useParams } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\ntype ParamTypes = {\r\n  id: string;\r\n};\r\n\r\nexport const TableHeadCompetition = () => {\r\n  const { id: tournamentId } = useParams<ParamTypes>();\r\n\r\n  // if the world championship or european championship, then do not show the form\r\n  const isNotCup =\r\n    +tournamentId !== 2000 && +tournamentId !== 2018 ? true : false;\r\n\r\n  return (\r\n    <thead>\r\n      <tr className=\"standings__head\">\r\n        <th className=\"standings__head-cell\">Position</th>\r\n        <th className=\"standings__head-cell\">Club</th>\r\n        <th className=\"standings__head-cell\">Games</th>\r\n        <th className=\"standings__head-cell\">\r\n          <span className=\"desctop-cell\">Points</span>\r\n          <span className=\"mobile-cell\">Pts</span>\r\n        </th>\r\n        <th className=\"standings__head-cell\">\r\n          <span className=\"desctop-cell\">Won</span>\r\n          <span className=\"mobile-cell\">W</span>\r\n        </th>\r\n        <th className=\"standings__head-cell\">\r\n          <span className=\"desctop-cell\">Drawn</span>\r\n          <span className=\"mobile-cell\">D</span>\r\n        </th>\r\n        <th className=\"standings__head-cell\">\r\n          <span className=\"desctop-cell\">Lost</span>\r\n          <span className=\"mobile-cell\">L</span>\r\n        </th>\r\n        <th className=\"standings__head-cell\">\r\n          <abbr title=\"Golas For\">GF</abbr>\r\n        </th>\r\n        <th className=\"standings__head-cell\">\r\n          <abbr title=\"Goals Against\">GA</abbr>\r\n        </th>\r\n        <th className=\"standings__head-cell\">\r\n          <abbr title=\"Goal Difference\">GD</abbr>\r\n        </th>\r\n        {isNotCup ? <th className=\"standings__head-cell\">Form</th> : null}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport \"./style.css\";\r\n\r\ntype PropTypes = {\r\n  form: string;\r\n};\r\n\r\nexport const TeamForm: FC<PropTypes> = ({ form }) => {\r\n  const formArr = form.split(\",\");\r\n  return (\r\n    <ul className=\"team-form-list\">\r\n      {formArr.map((item, i) => {\r\n        return (\r\n          <li key={i} className={`team-form-list__item ${item}`}>\r\n            {item}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/flag.f704db98.gif\";","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TeamStatistics } from \"../../redux/reducers/tournamentReducer\";\r\nimport { TeamForm } from \"../TeamForm/TeamForm\";\r\nimport flagTeam from \"./images/flag.gif\";\r\nimport \"./style.css\";\r\n\r\ntype PropTypes = {\r\n  table: TeamStatistics[];\r\n};\r\n\r\nexport const TableRowCompetition: FC<PropTypes> = ({ table }) => {\r\n  const tableRows = table.map((item) => {\r\n    const {\r\n      position,\r\n      form,\r\n      draw,\r\n      lost,\r\n      playedGames,\r\n      points,\r\n      goalDifference,\r\n      goalsAgainst,\r\n      goalsFor,\r\n      team,\r\n      won,\r\n    } = item;\r\n\r\n    return (\r\n      <tr key={team.id}>\r\n        <td className=\"standings__cell\">{position}</td>\r\n        <td className=\"standings__cell\">\r\n          <Link className=\"football-team\" to={`/team/${team.id}`}>\r\n            <img\r\n              src={team.crestUrl || flagTeam}\r\n              alt={team.name}\r\n              className=\"football-team__logo\"\r\n            />\r\n            <p className=\"football-team__name\">{team.name}</p>\r\n          </Link>\r\n        </td>\r\n        <td className=\"standings__cell\">{playedGames}</td>\r\n        <td className=\"standings__cell\">{points}</td>\r\n        <td className=\"standings__cell\">{won}</td>\r\n        <td className=\"standings__cell\">{draw}</td>\r\n        <td className=\"standings__cell\">{lost}</td>\r\n        <td className=\"standings__cell\">{goalsFor}</td>\r\n        <td className=\"standings__cell\">{goalsAgainst}</td>\r\n        <td className=\"standings__cell\">{goalDifference}</td>\r\n        {form ? (\r\n          <td className=\"standings__cell\">\r\n            <TeamForm form={form} />\r\n          </td>\r\n        ) : null}\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return <>{tableRows}</>\r\n};\r\n","import \"./style.css\";\r\n\r\nexport const Preloader = () => (\r\n  <div className=\"preloader\"></div>\r\n)","import { useEffect } from \"react\";\r\nimport { TableHeadCompetition } from \"../TableHeadCompetition\";\r\nimport { TableRowCompetition } from \"../TableRowCompetition\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTournamentInfoSelector } from \"../../redux/selectors\";\r\nimport { getTournamentStandings } from \"../../redux/actions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport { Preloader } from \"../Preloader\";\r\nimport {\r\n  Standings,\r\n  TournamentInfo,\r\n} from \"../../redux/reducers/tournamentReducer\";\r\nimport { RootState } from \"../../redux/reducers\";\r\n\r\ntype ParamTypes = {\r\n  id: string;\r\n};\r\n\r\nexport const TableCompetition = () => {\r\n  const dispatch = useDispatch();\r\n  const { id: tournamentId } = useParams<ParamTypes>();\r\n  const tournamentInfo = useSelector<RootState, TournamentInfo | null>(\r\n    getTournamentInfoSelector\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getTournamentStandings(+tournamentId));\r\n    window.scrollTo(0, 0);\r\n  }, [tournamentId, dispatch]);\r\n\r\n  if (tournamentInfo === null) return <Preloader />;\r\n\r\n  const { competition, standings } = tournamentInfo;\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"tournament__title\">{competition.name}</h2>\r\n      {showTable(standings)}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction showTable(standings: Standings[]) {\r\n  return standings.map(({ table, group }, id) => {\r\n    const title = group?.replace(\"_\", \" \");\r\n    return (\r\n      <div key={id}>\r\n        <h3 className=\"tournament__title\">{title || \"Standings\"}</h3>\r\n        <table className=\"standings\">\r\n          <TableHeadCompetition />\r\n          <tbody>\r\n            <TableRowCompetition table={table} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getTournamentsList } from \"../../redux/actions\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { Tournament } from \"../../redux/reducers/tournamentReducer\";\r\nimport { getListTournamentsSelector } from \"../../redux/selectors\";\r\nimport { Preloader } from \"../Preloader\";\r\nimport \"./style.css\";\r\n\r\nexport const TournamentList = () => {\r\n  const dispatch = useDispatch();\r\n  const tournaments = useSelector<RootState, Tournament[]>(getListTournamentsSelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTournamentsList());\r\n    window.scrollTo(0, 0);\r\n  }, [dispatch]);\r\n\r\n  if (!tournaments.length) return <Preloader />;\r\n  return (\r\n    <>\r\n      <h1 className=\"tournament__title\">Select a tournament</h1>\r\n      <ul className=\"tournament-list\">\r\n        {tournaments.map((item) => (\r\n          <Link\r\n            key={item.id}\r\n            to={`/tournaments/${item.id}`}\r\n            className=\"tournament\"\r\n          >\r\n            <div className=\"tournament-img__wrap\">\r\n              <img\r\n                src={`./images/${item.code}.png`}\r\n                alt={item.name}\r\n                className=\"tournament__img\"\r\n              />\r\n            </div>\r\n            <p className=\"tournament__name\">{item.name}</p>\r\n          </Link>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport \"./style.css\";\r\n\r\ntype PropTypes = {\r\n  onClick: () => void;\r\n};\r\n\r\nexport const FollowBtn: FC<PropTypes> = ({ onClick }) => {\r\n  return (\r\n    <button className=\"follow\" onClick={onClick}>\r\n      FOLLOW\r\n    </button>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport \"./style.css\";\r\n\r\ntype PropTypes = {\r\n  onClick: () => void;\r\n};\r\n\r\nexport const UnfollowBtn: FC<PropTypes> = ({ onClick }) => {\r\n  return (\r\n    <button className=\"unfollow\" onClick={onClick}>\r\n      UNFOLLOW\r\n    </button>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addFavoritePlayer, deleteFavoritePlayer } from \"../../redux/actions\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { FavoriteItem } from \"../../redux/reducers/profileReducer\";\r\nimport { getFavoritePlayersSelector } from \"../../redux/selectors\";\r\nimport { FollowBtn } from \"../FollowBtn\";\r\nimport { UnfollowBtn } from \"../UnfollowBtn\";\r\nimport \"./style.css\";\r\n\r\ntype PropTypes = {\r\n  name: string;\r\n  dateOfBirth: string;\r\n  position: string;\r\n  nationality: string;\r\n  role: string;\r\n  id: number;\r\n  clubName: string;\r\n  clubIcon: string;\r\n};\r\n\r\nexport const PlayerCard: FC<PropTypes> = (props) => {\r\n  const dispatch = useDispatch();\r\n  const favoritePlayers = useSelector<RootState, FavoriteItem>(getFavoritePlayersSelector);\r\n  const {\r\n    name,\r\n    dateOfBirth,\r\n    position,\r\n    nationality,\r\n    role,\r\n    id,\r\n    clubName,\r\n    clubIcon,\r\n  } = props;\r\n\r\n  const isFavoritePlayer = !!favoritePlayers[id];\r\n\r\n  const followClickHandler = () => {\r\n    const player = {\r\n      id,\r\n      name,\r\n      position,\r\n      clubName,\r\n      clubIcon,\r\n    };\r\n    dispatch(addFavoritePlayer(player));\r\n  };\r\n\r\n  const unfollowClickHandler = () => {\r\n    dispatch(deleteFavoritePlayer(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__front\">\r\n        <p className=\"card__text\">{name || \"John\"}</p>\r\n      </div>\r\n      <div className=\"card__back\">\r\n        <p className=\"card__text\">Nationality: {nationality || \"Westeros\"}</p>\r\n        <p className=\"card__text\">\r\n          Date of Birth:\r\n          {\" \" + new Date(dateOfBirth).toLocaleDateString() || \"04/06/1990\"}\r\n        </p>\r\n        <p className=\"card__text\">Position: {position || \"Team Member\"}</p>\r\n        <p className=\"card__text\">Role: {role || \"Team Member\"}</p>\r\n        {isFavoritePlayer ? (\r\n          <UnfollowBtn onClick={unfollowClickHandler} />\r\n        ) : (\r\n          <FollowBtn onClick={followClickHandler} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/flag.f704db98.gif\";","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  addFavoriteTeam,\r\n  deleteFavoriteTeam,\r\n  getTeamInfo,\r\n} from \"../../redux/actions\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { FavoriteItem } from \"../../redux/reducers/profileReducer\";\r\nimport { TeamInfo as TeamInfoTypes } from \"../../redux/reducers/tournamentReducer\";\r\nimport {\r\n  getFavoriteTeamsSelector,\r\n  getTeamInfoSelector,\r\n} from \"../../redux/selectors\";\r\nimport { FollowBtn } from \"../FollowBtn\";\r\nimport { PlayerCard } from \"../PlayerCard\";\r\nimport { Preloader } from \"../Preloader\";\r\nimport { UnfollowBtn } from \"../UnfollowBtn\";\r\nimport flag from \"./images/flag.gif\";\r\nimport \"./style.css\";\r\n\r\nconst defaultPlayer = {\r\n  dateOfBirth: \"1985-02-05T00:00:00Z\",\r\n  name: \"John Snow\",\r\n  nationality: \"Westeros\",\r\n  position: \"Attacker\",\r\n  role: \"PLAYER\",\r\n};\r\n\r\ntype ParamTypes = {\r\n  id: string;\r\n};\r\n\r\nexport const TeamInfo = () => {\r\n  const dispatch = useDispatch();\r\n  const favoriteTeams = useSelector<RootState, FavoriteItem>(\r\n    getFavoriteTeamsSelector\r\n  );\r\n  const teamInfo = useSelector<RootState, TeamInfoTypes | null >(getTeamInfoSelector);\r\n  const { id: teamId } = useParams<ParamTypes>();\r\n  const isFavorite = !!favoriteTeams[teamId];\r\n\r\n  useEffect(() => {\r\n    dispatch(getTeamInfo(+teamId));\r\n    window.scrollTo(0, 0);\r\n  }, [dispatch, teamId]);\r\n\r\n  if (teamInfo === null) return <Preloader />;\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    crestUrl,\r\n    founded = \"1960\",\r\n    venue: stadium = \"National stadium\",\r\n  } = teamInfo;\r\n\r\n  let { squad } = teamInfo;\r\n\r\n  if (!squad.length) {\r\n    squad = Array(10).fill(defaultPlayer);\r\n  }\r\n\r\n  const followClickHandler = () => {\r\n    const team = {\r\n      id,\r\n      name,\r\n      crestUrl,\r\n    };\r\n    dispatch(addFavoriteTeam(team));\r\n  };\r\n\r\n  const unfollowClickHandler = () => {\r\n    dispatch(deleteFavoriteTeam(id));\r\n  };\r\n\r\n  return (\r\n    <section className=\"club\">\r\n      <div className=\"club-info\">\r\n        <div className=\"club-info__img-wrap\">\r\n          <img className=\"club-info__img\" src={crestUrl || flag} alt={name} />\r\n        </div>\r\n        <div className=\"club-info__col\">\r\n          <h2 className=\"club-info__title\">{name}</h2>\r\n          <p className=\"club-info__text\">Founded: {founded}</p>\r\n          <p className=\"club-info__text\">Stadium: {stadium}</p>\r\n          {isFavorite ? (\r\n            <UnfollowBtn onClick={unfollowClickHandler} />\r\n          ) : (\r\n            <FollowBtn onClick={followClickHandler} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"team\">\r\n        <h3 className=\"team__title\">Team:</h3>\r\n        <div className=\"team-block\">\r\n          {squad.map((player) => (\r\n            <PlayerCard\r\n              {...player}\r\n              key={player.id}\r\n              clubName={name}\r\n              clubIcon={crestUrl}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport { Profile } from \"../../components/Profile\";\r\nimport { TableCompetition } from \"../../components/TableCompetition/TableCompetition\";\r\nimport { TournamentList } from \"../../components/TournamentList\";\r\nimport { TeamInfo } from \"../../components/TeamInfo\";\r\n\r\ntype RTypes = {\r\n  path: string;\r\n  render: () => React.ReactElement;\r\n  exact?: boolean;\r\n};\r\n\r\nconst routes: RTypes[] = [\r\n  {\r\n    path: \"/profile\",\r\n    render: () => <Profile />,\r\n  },\r\n  {\r\n    path: \"/tournaments\",\r\n    render: () => <TournamentList />,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/tournaments/:id\",\r\n    render: () => <TableCompetition />,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/team/:id\",\r\n    render: () => <TeamInfo />,\r\n  },\r\n  {\r\n    path: \"/\",\r\n    render: () => <h1>Football app</h1>,\r\n    exact: true,\r\n  },\r\n];\r\n\r\nexport const PublicRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, id) => (\r\n        <Route key={id} {...route} />\r\n      ))}\r\n    </Switch>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\ntype LType = {\r\n  path: string;\r\n  name: string;\r\n};\r\n\r\nconst links: LType[] = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    name: \"Profile\",\r\n  },\r\n  {\r\n    path: \"/tournaments\",\r\n    name: \"Tournaments\",\r\n  },\r\n];\r\n\r\ntype PropTypes = {\r\n  toggleMenu: () => void;\r\n};\r\n\r\nexport const MenuList: FC<PropTypes> = ({ toggleMenu }) => {\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      {links.map((link, id) => (\r\n        <li className=\"nav-links__row\" key={id}>\r\n          <NavLink\r\n            className=\"nav-links__item\"\r\n            to={link.path}\r\n            onClick={toggleMenu}\r\n            exact={true}\r\n          >\r\n            <p className=\"nav-links__name\">{link.name}</p>\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/moon.81f27c66.svg\";","export default __webpack_public_path__ + \"static/media/sun.cbe1118c.svg\";","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleTheme } from \"../../redux/actions\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { getThemeSelector } from \"../../redux/selectors\";\r\nimport moon from \"./images/moon.svg\";\r\nimport sun from \"./images/sun.svg\";\r\nimport \"./style.css\";\r\n\r\nexport const ThemeSwitcher = () => {\r\n  const dispatch = useDispatch();\r\n  const theme = useSelector<RootState, string>(getThemeSelector);\r\n  const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n  const onClickHandler = () => dispatch(toggleTheme(newTheme));\r\n  return (\r\n    <div\r\n      className=\"theme-swithcer theme-swithcer__outer\"\r\n      onClick={onClickHandler}\r\n    >\r\n      <div className=\"theme-swithcer__ball\"></div>\r\n      <object\r\n        className=\"theme-swithcer__sun\"\r\n        type=\"image/svg+xml\"\r\n        data={sun}\r\n        aria-label=\"sun-icon\"\r\n      ></object>\r\n      <object\r\n        className=\"theme-swithcer__moon\"\r\n        type=\"image/svg+xml\"\r\n        data={moon}\r\n        aria-label=\"sun-moon\"\r\n      ></object>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { MenuList } from \"../MenuList/MenuList\";\r\nimport { ThemeSwitcher } from \"../ThemeSwitcher\";\r\nimport \"./style.css\";\r\n\r\nexport const Navigation = () => {\r\n  const [isOpen, setToggleMenu] = useState<boolean>(false);\r\n  const activeMenu = isOpen ? \"open\" : \"\";\r\n  const toggleMenuHandler = () => setToggleMenu(!isOpen);\r\n  return (\r\n    <>\r\n      <nav className=\"navigation\">\r\n        <div\r\n          className={`menu-icon ${activeMenu}`}\r\n          onClick={toggleMenuHandler}\r\n        ></div>\r\n        <div className={`menu-wrap ${activeMenu}`}>\r\n          <MenuList toggleMenu={toggleMenuHandler}/>\r\n        </div>\r\n        <div\r\n          className={`overlay ${activeMenu}`}\r\n          onClick={toggleMenuHandler}\r\n        ></div>\r\n        <ThemeSwitcher />\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport \"./style.css\";\r\n\r\ntype PropTypes = {\r\n  children: React.ReactElement ;\r\n}\r\n\r\nexport const Content: FC<PropTypes> = ({ children }) => {\r\n  return <div className=\"main-content\">{children}</div>;\r\n};\r\n","import { PublicRoutes } from \"./routes/PublicRoutes\";\r\nimport { Navigation } from \"./components/Navigation\";\r\nimport { Content } from \"./components/Content\";\r\nimport \"./App.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getThemeSelector } from \"./redux/selectors\";\r\n\r\nfunction App() {\r\n  const theme = useSelector(getThemeSelector);\r\n  return (\r\n    <main className={`main-container ${theme}`}>\r\n      <Navigation />\r\n      <Content>\r\n        <PublicRoutes />\r\n      </Content>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ActionTypes } from \"./../actions/types\";\r\nimport {\r\n  ADD_FAVORITE_PLAYER,\r\n  ADD_FAVORITE_TEAM,\r\n  DELETE_FAVORITE_PLAYER,\r\n  DELETE_FAVORITE_TEAM,\r\n} from \"../actionTypes\";\r\n\r\nexport interface Favorite {\r\n  id: number;\r\n  name?: string;\r\n  crestUrl?: string;\r\n  position?: string;\r\n  clubName?: string;\r\n  clubIcon?: string;\r\n};\r\n\r\nexport interface FavoriteItem {\r\n  [key: string]: Favorite;\r\n};\r\n\r\nexport type ProfileState = {\r\n  listFavoriteTeams: FavoriteItem;\r\n  listFavoritePlayers: FavoriteItem;\r\n}\r\n\r\nconst initialState: ProfileState = {\r\n  listFavoriteTeams: {},\r\n  listFavoritePlayers: {},\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action: ActionTypes): ProfileState => {\r\n  switch (action.type) {\r\n    case ADD_FAVORITE_PLAYER:\r\n      const playerId = action.payload.id;\r\n      const favoritePlayers = {\r\n        ...state.listFavoritePlayers,\r\n        [playerId]: action.payload,\r\n      };\r\n      return {\r\n        ...state,\r\n        listFavoritePlayers: favoritePlayers,\r\n      };\r\n    case ADD_FAVORITE_TEAM:\r\n      const teamId = action.payload.id;\r\n      const favoriteTeams = {\r\n        ...state.listFavoriteTeams,\r\n        [teamId]: action.payload,\r\n      };\r\n      return {\r\n        ...state,\r\n        listFavoriteTeams: favoriteTeams,\r\n      };\r\n    case DELETE_FAVORITE_PLAYER:\r\n      const players = { ...state.listFavoritePlayers };\r\n      delete players[action.payload];\r\n      return {\r\n        ...state,\r\n        listFavoritePlayers: players,\r\n      };\r\n    case DELETE_FAVORITE_TEAM:\r\n      const teams = { ...state.listFavoriteTeams };\r\n      delete teams[action.payload];\r\n      return {\r\n        ...state,\r\n        listFavoriteTeams: teams,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionTypes } from \"./../actions/types\";\r\nimport {\r\n  SET_TEAM_INFO,\r\n  SET_TOURNAMENTS_LIST,\r\n  SET_TOURNAMENT_INFO,\r\n} from \"../actionTypes\";\r\n\r\nexport type Tournament = {\r\n  area: {\r\n    id: number;\r\n    name: string;\r\n    countryCode: string;\r\n    ensignUrl?: string;\r\n  };\r\n  countryCode: string;\r\n  ensignUrl: string;\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  currentSeason: {\r\n    id: number;\r\n    startDate: string;\r\n    endDate: string;\r\n    currentMatchday: number;\r\n    winner: number;\r\n  };\r\n  emblemUrl?: string;\r\n  lastUpdated: string;\r\n  numberOfAvailableSeasons: number;\r\n  plan: string;\r\n};\r\n\r\nexport type TeamStatistics = {\r\n  position: number;\r\n  team: {\r\n    id: number;\r\n    name: string;\r\n    crestUrl: string;\r\n  };\r\n  playedGames: number;\r\n  form: string;\r\n  won: number;\r\n  draw: number;\r\n  lost: number;\r\n  points: number;\r\n  goalsFor: number;\r\n  goalsAgainst: number;\r\n  goalDifference: number;\r\n};\r\n\r\nexport type Standings = {\r\n  stage: string;\r\n  type: string;\r\n  group: string;\r\n  table: TeamStatistics[];\r\n};\r\n\r\nexport type TournamentInfo = {\r\n  filters: object;\r\n  competition: {\r\n    id: number;\r\n    area: {\r\n      id: number;\r\n      name: string;\r\n    };\r\n    name: string;\r\n    code: string;\r\n    plan: string;\r\n    lastUpdated: string;\r\n  };\r\n  season: {\r\n    id: number;\r\n    startDate: string;\r\n    endDate: string;\r\n    currentMatchday: number;\r\n    winner: number;\r\n  };\r\n  standings: Standings[];\r\n};\r\n\r\nexport type Player = {\r\n  id: number;\r\n  name: string;\r\n  position: string;\r\n  dateOfBirth: string;\r\n  countryOfBirth: string;\r\n  nationality: string;\r\n  shirtNumber: number;\r\n  role: string;\r\n};\r\n\r\nexport interface TeamInfo {\r\n  id: number;\r\n  area: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n  activeCompetitions: [\r\n    {\r\n      id: number;\r\n      area: {\r\n        id: number;\r\n        name: string;\r\n      };\r\n      name: string;\r\n      code: string;\r\n      plan: string;\r\n      lastUpdated: string;\r\n    }\r\n  ];\r\n  name: string;\r\n  shortName: string;\r\n  tla: string;\r\n  crestUrl: string;\r\n  address: string;\r\n  phone: string;\r\n  website: string;\r\n  email: string;\r\n  founded: number;\r\n  clubColors: string;\r\n  venue: string;\r\n  squad: Player[];\r\n  lastUpdated: string;\r\n}\r\n\r\nexport interface TournamentState {\r\n  listTournaments: Tournament[];\r\n  tournamentInfo: TournamentInfo | null;\r\n  teamInfo: TeamInfo | null;\r\n}\r\n\r\nconst initialState: TournamentState = {\r\n  listTournaments: [],\r\n  tournamentInfo: null,\r\n  teamInfo: null,\r\n};\r\n\r\nexport const tournamentReducer = (\r\n  state = initialState,\r\n  action: ActionTypes\r\n): TournamentState => {\r\n  switch (action.type) {\r\n    case SET_TOURNAMENTS_LIST:\r\n      return {\r\n        ...state,\r\n        listTournaments: [...action.payload],\r\n      };\r\n    case SET_TOURNAMENT_INFO:\r\n      return {\r\n        ...state,\r\n        tournamentInfo: action.payload,\r\n      };\r\n    case SET_TEAM_INFO:\r\n      return {\r\n        ...state,\r\n        teamInfo: action.payload,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { ActionTypes } from \"./../actions/types\";\r\nimport { TOGGLE_THEME } from \"../actionTypes\";\r\n\r\nexport type AppState = {\r\n  theme: string;\r\n};\r\n\r\nconst initialState: AppState = {\r\n  theme: \"light\",\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case TOGGLE_THEME:\r\n      return {\r\n        ...state,\r\n        theme: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { profileReducer, ProfileState } from \"./profileReducer\";\r\nimport { tournamentReducer, TournamentState } from \"./tournamentReducer\";\r\nimport { appReducer, AppState } from \"./appReducer\";\r\n\r\nexport interface ApplicationState {\r\n  tournament: TournamentState;\r\n  profile: ProfileState;\r\n  app: AppState;\r\n}\r\n\r\nexport const rootReducer = combineReducers<ApplicationState>({\r\n  tournament: tournamentReducer,\r\n  profile: profileReducer,\r\n  app: appReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  whitelist: [\"profile\", \"app\"],\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { persistor, store } from \"./redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>{app}</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}