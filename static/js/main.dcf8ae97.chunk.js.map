{"version":3,"sources":["redux/selectors/index.ts","api/requests.ts","redux/actionTypes/index.ts","redux/actions/index.ts","components/FavoritePlayerList/images/flag.gif","components/FavoritePlayerList/FavoritePlayerList.tsx","components/FavoriteTeamList/images/flag.gif","components/FavoriteTeamList/FavoriteTeamsList.tsx","components/Profile/images/avatar.jpg","components/Profile/Profile.tsx","components/TableHeadCompetition/TableHeadCompetition.tsx","components/TeamForm/TeamForm.tsx","components/TableRowCompetition/images/flag.gif","components/TableRowCompetition/TableRowCompetition.tsx","components/Preloader/Preloader.tsx","components/TableCompetition/TableCompetition.tsx","components/TournamentList/TournamentList.tsx","components/FollowBtn/FollowBtn.tsx","components/UnfollowBtn/UnfollowBtn.tsx","components/PlayerCard/PlayerCard.tsx","components/TeamInfo/images/flag.gif","components/TeamInfo/TeamInfo.tsx","routes/PublicRoutes/PublicRoutes.tsx","components/MenuList/MenuList.tsx","components/ThemeSwitcher/images/moon.svg","components/ThemeSwitcher/images/sun.svg","components/ThemeSwitcher/ThemeSwitcher.tsx","components/Navigation/Navigation.tsx","components/Content/Content.tsx","App.tsx","redux/reducers/profileReducer.ts","redux/reducers/tournamentReducer.ts","redux/reducers/appReducer.ts","redux/reducers/index.ts","redux/index.ts","index.tsx"],"names":["getFavoriteTeamsSelector","state","profile","listFavoriteTeams","getFavoritePlayersSelector","listFavoritePlayers","getListTournamentsSelector","tournament","listTournaments","getTournamentInfoSelector","tournamentInfo","getTeamInfoSelector","teamInfo","getThemeSelector","app","theme","instance","axios","create","baseURL","headers","getTournaments","get","e","console","log","message","getTournamentStandings","id","getTeam","SET_TOURNAMENTS_LIST","SET_TOURNAMENT_INFO","SET_TEAM_INFO","ADD_FAVORITE_TEAM","DELETE_FAVORITE_TEAM","ADD_FAVORITE_PLAYER","DELETE_FAVORITE_PLAYER","TOGGLE_THEME","setTournamentsList","payload","type","setTournamentInfo","setTeamInfo","deleteFavoritePlayer","deleteFavoriteTeam","FavoritePlayersList","players","dispatch","useDispatch","className","map","player","clubIcon","name","clubName","position","src","flag","alt","onClick","FavoriteTeamsList","teams","team","crestUrl","Profile","favoritePlayers","useSelector","favoriteTeams","isEmptyPlayers","Object","values","length","isEmptyTeams","avatar","TableHeadCompetition","tournamentId","useParams","isNotCup","title","TeamForm","formArr","form","split","item","i","TableRowCompetition","tableRows","table","draw","lost","playedGames","points","goalDifference","goalsAgainst","goalsFor","won","to","flagTeam","Preloader","TableCompetition","useEffect","API","then","data","window","scrollTo","competition","standings","showTable","group","replace","TournamentList","tournaments","competitions","code","FollowBtn","UnfollowBtn","PlayerCard","props","dateOfBirth","nationality","role","isFavoritePlayer","Date","toLocaleDateString","defaultPlayer","TeamInfo","teamId","isFavorite","getTeamInfo","founded","stadium","venue","squad","Array","fill","key","routes","path","component","exact","PublicRoutes","render","links","MenuList","toggleMenu","link","ThemeSwitcher","newTheme","sun","aria-label","moon","Navigation","useState","isOpen","setToggleMenu","activeMenu","toggleMenuHandler","Content","children","App","initialState","rootReducer","combineReducers","action","playerId","persistConfig","whitelist","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcf8ae97.chunk.js","sourcesContent":["import { TournamentInfo, TeamInfo, FavoriteItem, Tournament } from './../../types';\nimport { RootState } from './../reducers/index';\n\nexport const getFavoriteTeamsSelector = (state: RootState): FavoriteItem => state.profile.listFavoriteTeams;\nexport const getFavoritePlayersSelector = (state: RootState): FavoriteItem => state.profile.listFavoritePlayers;\nexport const getListTournamentsSelector = (state: RootState): Tournament[] => state.tournament.listTournaments;\nexport const getTournamentInfoSelector = (state: RootState): TournamentInfo | null => state.tournament.tournamentInfo;\nexport const getTeamInfoSelector = (state: RootState): TeamInfo | null => state.tournament.teamInfo;\nexport const getThemeSelector = (state: RootState): string => state.app.theme;\n","import { TournamentList, TournamentInfo, TeamInfo } from '../types';\nimport axios, { AxiosResponse } from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.football-data.org/v2/',\n  headers: { 'X-Auth-Token': '0de2b419cd614b6da622b89303e0c8ad' },\n});\n\nexport const getTournaments = (): Promise<AxiosResponse<TournamentList>> | undefined => {\n  try {\n    return instance.get('/competitions?plan=TIER_ONE');\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\nexport const getTournamentStandings = (id: number): Promise<AxiosResponse<TournamentInfo>> | undefined => {\n  try {\n    return instance.get(`/competitions/${id}/standings?standingType=TOTAL`);\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\nexport const getTeam = (id: number): Promise<AxiosResponse<TeamInfo>> | undefined => {\n  try {\n    return instance.get(`teams/${id}/`);\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n","export const SET_TOURNAMENTS_LIST = 'SET_TOURNAMENTS_LIST';\nexport const SET_TOURNAMENT_INFO = 'SET_TOURNAMENT_INFO';\nexport const SET_TEAM_INFO = 'SET_TEAM_INFO';\nexport const ADD_FAVORITE_TEAM = 'ADD_FAVORITE_TEAM';\nexport const DELETE_FAVORITE_TEAM = 'DELETE_FAVORITE_TEAM';\nexport const ADD_FAVORITE_PLAYER = 'ADD_FAVORITE_PLAYER';\nexport const DELETE_FAVORITE_PLAYER = 'DELETE_FAVORITE_PLAYER';\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\n","import { Favorite, TeamInfo, TournamentInfo, Tournament } from './../../types';\nimport { ActionTypes } from './types';\nimport { API } from '../../api';\nimport {\n  ADD_FAVORITE_TEAM,\n  ADD_FAVORITE_PLAYER,\n  DELETE_FAVORITE_PLAYER,\n  DELETE_FAVORITE_TEAM,\n  SET_TEAM_INFO,\n  SET_TOURNAMENTS_LIST,\n  SET_TOURNAMENT_INFO,\n  TOGGLE_THEME,\n} from '../actionTypes';\nimport { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { RootState } from '../reducers';\n\nexport const getTournamentsList = (): ThunkAction<void, RootState, null, Action<string>> => dispatch => {\n  API.getTournaments()?.then(({ data }) => {\n    const { competitions } = data;\n    dispatch(setTournamentsList(competitions));\n  });\n};\n\nexport const getTournamentStandings = (id: number): ThunkAction<void, RootState, null, Action<string>> => dispatch => {\n  API.getTournamentStandings(id)?.then(({ data }) => {\n    dispatch(setTournamentInfo(data));\n  });\n};\n\nexport const getTeamInfo = (id: number): ThunkAction<void, RootState, null, Action<string>> => dispatch => {\n  API.getTeam(id)?.then(({ data }) => {\n    dispatch(setTeamInfo(data));\n  });\n};\n\nexport const setTournamentsList = (payload: Tournament[]): ActionTypes => ({\n  type: SET_TOURNAMENTS_LIST,\n  payload,\n});\n\nexport const setTournamentInfo = (payload: TournamentInfo): ActionTypes => ({\n  type: SET_TOURNAMENT_INFO,\n  payload,\n});\n\nexport const setTeamInfo = (payload: TeamInfo): ActionTypes => ({\n  type: SET_TEAM_INFO,\n  payload,\n});\n\nexport const addFavoritePlayer = (payload: Favorite): ActionTypes => ({\n  type: ADD_FAVORITE_PLAYER,\n  payload,\n});\n\nexport const addFavoriteTeam = (payload: Favorite): ActionTypes => ({\n  type: ADD_FAVORITE_TEAM,\n  payload,\n});\n\nexport const deleteFavoritePlayer = (payload: number): ActionTypes => ({\n  type: DELETE_FAVORITE_PLAYER,\n  payload,\n});\n\nexport const deleteFavoriteTeam = (payload: number): ActionTypes => ({\n  type: DELETE_FAVORITE_TEAM,\n  payload,\n});\n\nexport const toggleTheme = (payload: string): ActionTypes => ({\n  type: TOGGLE_THEME,\n  payload,\n});\n","export default __webpack_public_path__ + \"static/media/flag.f704db98.gif\";","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteFavoritePlayer } from '../../redux/actions';\nimport flag from './images/flag.gif';\nimport { Favorite } from '../../types';\nimport './style.css';\n\ntype PropTypes = {\n  players: Favorite[];\n};\n\nexport const FavoritePlayersList = ({ players }: PropTypes): React.ReactElement => {\n  const dispatch = useDispatch();\n\n  return (\n    <ul className='favorite-players'>\n      {players.map(player => {\n        const { clubIcon, name, clubName, position, id } = player;\n        const unfollowHandler = () => dispatch(deleteFavoritePlayer(id));\n\n        return (\n          <li className='favorite-player' key={id}>\n            <div className='player__club-wrap'>\n              <img className='player__club' src={clubIcon || flag} alt={name} />\n            </div>\n            <div className='player-info'>\n              <p className='player-info__text'>{name}</p>\n              <p className='player-info__text'>Club: {clubName}</p>\n              <p className='player-info__text'>Position: {position}</p>\n            </div>\n            <button className='unfollow-player' onClick={unfollowHandler}>\n              &#10008;\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/flag.f704db98.gif\";","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteFavoriteTeam } from '../../redux/actions';\nimport flag from './images/flag.gif';\nimport { Favorite } from '../../types';\nimport './style.css';\n\ntype PropTypes = {\n  teams: Favorite[];\n};\n\nexport const FavoriteTeamsList = ({ teams }: PropTypes): React.ReactElement => {\n  const dispatch = useDispatch();\n\n  return (\n    <ul className='favorite-teams'>\n      {teams.map(team => {\n        const unfollowHandler = () => dispatch(deleteFavoriteTeam(id));\n        const { crestUrl, name, id } = team;\n        return (\n          <li className='favorite-team' key={id}>\n            <div className='favorite-team__img-wrap'>\n              <img className='favorite-team__img' src={crestUrl || flag} alt={name} />\n            </div>\n            <p className='favorite-team__name'>{name}</p>\n            <button className='unfollow-team' onClick={unfollowHandler}>\n              &#10008;\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/avatar.c3f9f338.jpg\";","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/reducers';\nimport { FavoriteItem } from '../../types';\nimport { getFavoritePlayersSelector, getFavoriteTeamsSelector } from '../../redux/selectors';\nimport { FavoritePlayersList } from '../FavoritePlayerList';\nimport { FavoriteTeamsList } from '../FavoriteTeamList';\nimport avatar from './images/avatar.jpg';\nimport './style.css';\n\nexport const Profile = (): React.ReactElement => {\n  const favoritePlayers = useSelector<RootState, FavoriteItem>(getFavoritePlayersSelector);\n  const favoriteTeams = useSelector<RootState, FavoriteItem>(getFavoriteTeamsSelector);\n  const isEmptyPlayers = !!Object.values(favoritePlayers).length;\n  const isEmptyTeams = !!Object.values(favoriteTeams).length;\n\n  return (\n    <div className='profile'>\n      <div className='profile-header'>\n        <div className='profile-avatar'>\n          <img className='profile-avatar__img' src={avatar} alt='John Snow' />\n        </div>\n      </div>\n      <p className='profile__name'>John Snow</p>\n\n      {isEmptyTeams ? (\n        <div className='following-teams'>\n          <h3 className='following__title'>Following teams</h3>\n          <FavoriteTeamsList teams={Object.values(favoriteTeams)} />\n        </div>\n      ) : null}\n\n      {isEmptyPlayers ? (\n        <div className='following-players'>\n          <h3 className='following__title'>Following players</h3>\n          <FavoritePlayersList players={Object.values(favoritePlayers)} />\n        </div>\n      ) : null}\n\n      {(isEmptyPlayers || isEmptyTeams) === true ? null : <p className='profile__text'>There aren&apos;t favorite players and teams</p>}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport './style.css';\n\ntype ParamTypes = {\n  id: string;\n};\n\nexport const TableHeadCompetition = (): React.ReactElement => {\n  const { id: tournamentId } = useParams<ParamTypes>();\n\n  // if the world championship or european championship, then do not show the form\n  const isNotCup = +tournamentId !== 2000 && +tournamentId !== 2018 ? true : false;\n\n  return (\n    <thead>\n      <tr className='standings__head'>\n        <th className='standings__head-cell'>Position</th>\n        <th className='standings__head-cell'>Club</th>\n        <th className='standings__head-cell'>Games</th>\n        <th className='standings__head-cell'>\n          <span className='desctop-cell'>Points</span>\n          <span className='mobile-cell'>Pts</span>\n        </th>\n        <th className='standings__head-cell'>\n          <span className='desctop-cell'>Won</span>\n          <span className='mobile-cell'>W</span>\n        </th>\n        <th className='standings__head-cell'>\n          <span className='desctop-cell'>Drawn</span>\n          <span className='mobile-cell'>D</span>\n        </th>\n        <th className='standings__head-cell'>\n          <span className='desctop-cell'>Lost</span>\n          <span className='mobile-cell'>L</span>\n        </th>\n        <th className='standings__head-cell'>\n          <abbr title='Golas For'>GF</abbr>\n        </th>\n        <th className='standings__head-cell'>\n          <abbr title='Goals Against'>GA</abbr>\n        </th>\n        <th className='standings__head-cell'>\n          <abbr title='Goal Difference'>GD</abbr>\n        </th>\n        {isNotCup ? <th className='standings__head-cell'>Form</th> : null}\n      </tr>\n    </thead>\n  );\n};\n","import React, { FC } from 'react';\nimport './style.css';\n\ntype PropTypes = {\n  form: string;\n};\n\nexport const TeamForm: FC<PropTypes> = ({ form }: PropTypes) => {\n  const formArr = form.split(',');\n  return (\n    <ul className='team-form-list'>\n      {formArr.map((item, i) => {\n        return (\n          <li key={i} className={`team-form-list__item ${item}`}>\n            {item}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/flag.f704db98.gif\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { TeamStatistics } from '../../types';\nimport { TeamForm } from '../TeamForm/TeamForm';\nimport flagTeam from './images/flag.gif';\nimport './style.css';\n\ntype PropTypes = {\n  table: TeamStatistics[];\n};\n\nexport const TableRowCompetition = ({ table }: PropTypes): React.ReactElement => {\n  const tableRows = table.map(item => {\n    const { position, form, draw, lost, playedGames, points, goalDifference, goalsAgainst, goalsFor, team, won } = item;\n\n    return (\n      <tr key={team.id}>\n        <td className='standings__cell'>{position}</td>\n        <td className='standings__cell'>\n          <Link className='football-team' to={`/team/${team.id}`}>\n            <img src={team.crestUrl || flagTeam} alt={team.name} className='football-team__logo' />\n            <p className='football-team__name'>{team.name}</p>\n          </Link>\n        </td>\n        <td className='standings__cell'>{playedGames}</td>\n        <td className='standings__cell'>{points}</td>\n        <td className='standings__cell'>{won}</td>\n        <td className='standings__cell'>{draw}</td>\n        <td className='standings__cell'>{lost}</td>\n        <td className='standings__cell'>{goalsFor}</td>\n        <td className='standings__cell'>{goalsAgainst}</td>\n        <td className='standings__cell'>{goalDifference}</td>\n        {form ? (\n          <td className='standings__cell'>\n            <TeamForm form={form} />\n          </td>\n        ) : null}\n      </tr>\n    );\n  });\n\n  return <>{tableRows}</>;\n};\n","import React from 'react';\nimport './style.css';\n\nexport const Preloader = (): React.ReactElement => <div className='preloader'></div>;\n","import React, { useEffect } from 'react';\nimport { TableHeadCompetition } from '../TableHeadCompetition';\nimport { TableRowCompetition } from '../TableRowCompetition';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTournamentInfoSelector } from '../../redux/selectors';\nimport { getTournamentStandings } from '../../redux/actions';\nimport { useParams } from 'react-router-dom';\nimport './style.css';\nimport { Preloader } from '../Preloader';\nimport { Standings, TournamentInfo } from '../../types';\nimport { RootState } from '../../redux/reducers';\n\ntype ParamTypes = {\n  id: string;\n};\n\nexport const TableCompetition = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const { id: tournamentId } = useParams<ParamTypes>();\n  const tournamentInfo = useSelector<RootState, TournamentInfo | null>(getTournamentInfoSelector);\n\n  useEffect(() => {\n    dispatch(getTournamentStandings(+tournamentId));\n    window.scrollTo(0, 0);\n  }, [tournamentId, dispatch]);\n\n  if (tournamentInfo === null) return <Preloader />;\n\n  const { competition, standings } = tournamentInfo;\n\n  return (\n    <>\n      <h2 className='tournament__title'>{competition.name}</h2>\n      {showTable(standings)}\n    </>\n  );\n};\n\nfunction showTable(standings: Standings[]) {\n  return standings.map(({ table, group }, id) => {\n    const title = group?.replace('_', ' ');\n    return (\n      <div key={id}>\n        <h3 className='tournament__title'>{title || 'Standings'}</h3>\n        <table className='standings'>\n          <TableHeadCompetition />\n          <tbody>\n            <TableRowCompetition table={table} />\n          </tbody>\n        </table>\n      </div>\n    );\n  });\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getTournamentsList } from '../../redux/actions';\nimport { RootState } from '../../redux/reducers';\nimport { Tournament } from '../../types';\nimport { getListTournamentsSelector } from '../../redux/selectors';\nimport { Preloader } from '../Preloader';\nimport './style.css';\n\nexport const TournamentList = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const tournaments = useSelector<RootState, Tournament[]>(getListTournamentsSelector);\n\n  useEffect(() => {\n    dispatch(getTournamentsList());\n    window.scrollTo(0, 0);\n  }, [dispatch]);\n\n  if (!tournaments.length) return <Preloader />;\n  return (\n    <>\n      <h1 className='tournament__title'>Select a tournament</h1>\n      <ul className='tournament-list'>\n        {tournaments.map(item => (\n          <Link key={item.id} to={`/tournaments/${item.id}`} className='tournament'>\n            <div className='tournament-img__wrap'>\n              <img src={`./images/${item.code}.png`} alt={item.name} className='tournament__img' />\n            </div>\n            <p className='tournament__name'>{item.name}</p>\n          </Link>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './style.css';\n\ntype PropTypes = {\n  onClick: () => void;\n};\n\nexport const FollowBtn = ({ onClick }: PropTypes): React.ReactElement => {\n  return (\n    <button className='follow' onClick={onClick}>\n      FOLLOW\n    </button>\n  );\n};\n","import React from 'react';\nimport './style.css';\n\ntype PropTypes = {\n  onClick: () => void;\n};\n\nexport const UnfollowBtn = ({ onClick }: PropTypes): React.ReactElement => {\n  return (\n    <button className='unfollow' onClick={onClick}>\n      UNFOLLOW\n    </button>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFavoritePlayer, deleteFavoritePlayer } from '../../redux/actions';\nimport { RootState } from '../../redux/reducers';\nimport { FavoriteItem } from '../../types';\nimport { getFavoritePlayersSelector } from '../../redux/selectors';\nimport { FollowBtn } from '../FollowBtn';\nimport { UnfollowBtn } from '../UnfollowBtn';\nimport './style.css';\n\ntype PropTypes = {\n  name: string;\n  dateOfBirth: string;\n  position: string;\n  nationality: string;\n  role: string;\n  id: number;\n  clubName: string;\n  clubIcon: string;\n};\n\nexport const PlayerCard = (props: PropTypes): React.ReactElement => {\n  const dispatch = useDispatch();\n  const favoritePlayers = useSelector<RootState, FavoriteItem>(getFavoritePlayersSelector);\n  const { name, dateOfBirth, position, nationality, role, id, clubName, clubIcon } = props;\n\n  const isFavoritePlayer = !!favoritePlayers[id];\n\n  const followClickHandler = () => {\n    const player = {\n      id,\n      name,\n      position,\n      clubName,\n      clubIcon,\n    };\n    dispatch(addFavoritePlayer(player));\n  };\n\n  const unfollowClickHandler = () => {\n    dispatch(deleteFavoritePlayer(id));\n  };\n\n  return (\n    <div className='card'>\n      <div className='card__front'>\n        <p className='card__text'>{name || 'John'}</p>\n      </div>\n      <div className='card__back'>\n        <p className='card__text'>Nationality: {nationality || 'Westeros'}</p>\n        <p className='card__text'>\n          Date of Birth:\n          {' ' + new Date(dateOfBirth).toLocaleDateString() || '04/06/1990'}\n        </p>\n        <p className='card__text'>Position: {position || 'Team Member'}</p>\n        <p className='card__text'>Role: {role || 'Team Member'}</p>\n        {isFavoritePlayer ? <UnfollowBtn onClick={unfollowClickHandler} /> : <FollowBtn onClick={followClickHandler} />}\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/flag.f704db98.gif\";","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addFavoriteTeam, deleteFavoriteTeam, getTeamInfo } from '../../redux/actions';\nimport { RootState } from '../../redux/reducers';\nimport { FavoriteItem, TeamInfo as TeamInfoTypes } from '../../types';\nimport { getFavoriteTeamsSelector, getTeamInfoSelector } from '../../redux/selectors';\nimport { FollowBtn } from '../FollowBtn';\nimport { PlayerCard } from '../PlayerCard';\nimport { Preloader } from '../Preloader';\nimport { UnfollowBtn } from '../UnfollowBtn';\nimport flag from './images/flag.gif';\nimport './style.css';\n\nconst defaultPlayer = {\n  dateOfBirth: '1985-02-05T00:00:00Z',\n  name: 'John Snow',\n  nationality: 'Westeros',\n  position: 'Attacker',\n  role: 'PLAYER',\n};\n\ntype ParamTypes = {\n  id: string;\n};\n\nexport const TeamInfo = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const favoriteTeams = useSelector<RootState, FavoriteItem>(getFavoriteTeamsSelector);\n  const teamInfo = useSelector<RootState, TeamInfoTypes | null>(getTeamInfoSelector);\n  const { id: teamId } = useParams<ParamTypes>();\n  const isFavorite = !!favoriteTeams[teamId];\n\n  useEffect(() => {\n    dispatch(getTeamInfo(+teamId));\n    window.scrollTo(0, 0);\n  }, [dispatch, teamId]);\n\n  if (teamInfo === null) return <Preloader />;\n\n  const { id, name, crestUrl, founded = '1960', venue: stadium } = teamInfo;\n\n  let { squad } = teamInfo;\n\n  if (!squad.length) {\n    squad = Array(10).fill(defaultPlayer);\n  }\n\n  const followClickHandler = () => {\n    const team = {\n      id,\n      name,\n      crestUrl,\n    };\n    dispatch(addFavoriteTeam(team));\n  };\n\n  const unfollowClickHandler = () => {\n    dispatch(deleteFavoriteTeam(id));\n  };\n  console.log(stadium);\n  return (\n    <section className='club'>\n      <div className='club-info'>\n        <div className='club-info__img-wrap'>\n          <img className='club-info__img' src={crestUrl || flag} alt={name} />\n        </div>\n        <div className='club-info__col'>\n          <h2 className='club-info__title'>{name}</h2>\n          <p className='club-info__text'>Founded: {founded}</p>\n          <p className='club-info__text'>Stadium: {stadium || 'National stadium'}</p>\n          {isFavorite ? <UnfollowBtn onClick={unfollowClickHandler} /> : <FollowBtn onClick={followClickHandler} />}\n        </div>\n      </div>\n      <div className='team'>\n        <h3 className='team__title'>Team:</h3>\n        <div className='team-block'>\n          {squad.map(player => (\n            <PlayerCard {...player} key={player.id} clubName={name} clubIcon={crestUrl} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Profile } from '../../components/Profile';\nimport { TableCompetition } from '../../components/TableCompetition/TableCompetition';\nimport { TournamentList } from '../../components/TournamentList';\nimport { TeamInfo } from '../../components/TeamInfo';\n\ntype RTypes = {\n  path: string;\n  component: React.ReactElement;\n  exact?: boolean;\n};\n\nconst routes: RTypes[] = [\n  {\n    path: '/profile',\n    component: <Profile />,\n  },\n  {\n    path: '/tournaments',\n    component: <TournamentList />,\n    exact: true,\n  },\n  {\n    path: '/tournaments/:id',\n    component: <TableCompetition />,\n    exact: true,\n  },\n  {\n    path: '/team/:id',\n    component: <TeamInfo />,\n  },\n  {\n    path: '/',\n    component: <h1>Football app</h1>,\n    exact: true,\n  },\n];\n\nexport const PublicRoutes = (): React.ReactElement => {\n  return (\n    <Switch>\n      {routes.map(({ component, ...props }, id) => (\n        <Route key={id} render={() => component} {...props} />\n      ))}\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './style.css';\n\ntype LType = {\n  path: string;\n  name: string;\n};\n\nconst links: LType[] = [\n  {\n    path: '/',\n    name: 'Home',\n  },\n  {\n    path: '/profile',\n    name: 'Profile',\n  },\n  {\n    path: '/tournaments',\n    name: 'Tournaments',\n  },\n];\n\ntype PropTypes = {\n  toggleMenu: () => void;\n};\n\nexport const MenuList = ({ toggleMenu }: PropTypes): React.ReactElement => {\n  return (\n    <ul className='nav-links'>\n      {links.map((link, id) => (\n        <li className='nav-links__row' key={id}>\n          <NavLink className='nav-links__item' to={link.path} onClick={toggleMenu} exact={true}>\n            <p className='nav-links__name'>{link.name}</p>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/moon.81f27c66.svg\";","export default __webpack_public_path__ + \"static/media/sun.cbe1118c.svg\";","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleTheme } from '../../redux/actions';\nimport { RootState } from '../../redux/reducers';\nimport { getThemeSelector } from '../../redux/selectors';\nimport moon from './images/moon.svg';\nimport sun from './images/sun.svg';\nimport './style.css';\n\nexport const ThemeSwitcher = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const theme = useSelector<RootState, string>(getThemeSelector);\n\n  const newTheme = theme === 'light' ? 'dark' : 'light';\n  const onClickHandler = () => dispatch(toggleTheme(newTheme));\n\n  return (\n    <div className='theme-swithcer theme-swithcer__outer' onClick={onClickHandler}>\n      <div className='theme-swithcer__ball'></div>\n      <object className='theme-swithcer__sun' type='image/svg+xml' data={sun} aria-label='sun-icon'></object>\n      <object className='theme-swithcer__moon' type='image/svg+xml' data={moon} aria-label='sun-moon'></object>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { MenuList } from '../MenuList/MenuList';\nimport { ThemeSwitcher } from '../ThemeSwitcher';\nimport './style.css';\n\nexport const Navigation = (): React.ReactElement => {\n  const [isOpen, setToggleMenu] = useState<boolean>(false);\n  const activeMenu = isOpen ? 'open' : '';\n  const toggleMenuHandler = () => setToggleMenu(!isOpen);\n  return (\n    <>\n      <nav className='navigation'>\n        <div className={`menu-icon ${activeMenu}`} onClick={toggleMenuHandler}></div>\n        <div className={`menu-wrap ${activeMenu}`}>\n          <MenuList toggleMenu={toggleMenuHandler} />\n        </div>\n        <div className={`overlay ${activeMenu}`} onClick={toggleMenuHandler}></div>\n        <ThemeSwitcher />\n      </nav>\n    </>\n  );\n};\n","import React from 'react';\nimport './style.css';\n\ntype PropTypes = {\n  children: React.ReactElement;\n};\n\nexport const Content = ({ children }: PropTypes): React.ReactElement => {\n  return <div className='main-content'>{children}</div>;\n};\n","import React from 'react';\nimport { PublicRoutes } from './routes/PublicRoutes';\nimport { Navigation } from './components/Navigation';\nimport { Content } from './components/Content';\nimport { useSelector } from 'react-redux';\nimport { getThemeSelector } from './redux/selectors';\nimport './App.css';\n\nfunction App(): React.ReactElement {\n  const theme = useSelector(getThemeSelector);\n  return (\n    <main className={`main-container ${theme}`}>\n      <Navigation />\n      <Content>\n        <PublicRoutes />\n      </Content>\n    </main>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from './../actions/types';\nimport { ADD_FAVORITE_PLAYER, ADD_FAVORITE_TEAM, DELETE_FAVORITE_PLAYER, DELETE_FAVORITE_TEAM } from '../actionTypes';\nimport { FavoriteItem } from '../../types';\n\nexport type ProfileState = {\n  listFavoriteTeams: FavoriteItem;\n  listFavoritePlayers: FavoriteItem;\n};\n\nconst initialState: ProfileState = {\n  listFavoriteTeams: {},\n  listFavoritePlayers: {},\n};\n\nexport const profileReducer = (state = initialState, action: ActionTypes): ProfileState => {\n  switch (action.type) {\n    case ADD_FAVORITE_PLAYER: {\n      const playerId = action.payload.id;\n      const favoritePlayers = {\n        ...state.listFavoritePlayers,\n        [playerId]: action.payload,\n      };\n      return {\n        ...state,\n        listFavoritePlayers: favoritePlayers,\n      };\n    }\n    case ADD_FAVORITE_TEAM: {\n      const teamId = action.payload.id;\n      const favoriteTeams = {\n        ...state.listFavoriteTeams,\n        [teamId]: action.payload,\n      };\n      return {\n        ...state,\n        listFavoriteTeams: favoriteTeams,\n      };\n    }\n    case DELETE_FAVORITE_PLAYER: {\n      const favoritePlayers = { ...state.listFavoritePlayers };\n      delete favoritePlayers[action.payload];\n      return {\n        ...state,\n        listFavoritePlayers: favoritePlayers,\n      };\n    }\n    case DELETE_FAVORITE_TEAM: {\n      const favoriteTeams = { ...state.listFavoriteTeams };\n      delete favoriteTeams[action.payload];\n      return {\n        ...state,\n        listFavoriteTeams: favoriteTeams,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { ActionTypes } from './../actions/types';\nimport { SET_TEAM_INFO, SET_TOURNAMENTS_LIST, SET_TOURNAMENT_INFO } from '../actionTypes';\nimport { TeamInfo, Tournament, TournamentInfo } from '../../types';\n\nexport interface TournamentState {\n  listTournaments: Tournament[];\n  tournamentInfo: TournamentInfo | null;\n  teamInfo: TeamInfo | null;\n}\n\nconst initialState: TournamentState = {\n  listTournaments: [],\n  tournamentInfo: null,\n  teamInfo: null,\n};\n\nexport const tournamentReducer = (state = initialState, action: ActionTypes): TournamentState => {\n  switch (action.type) {\n    case SET_TOURNAMENTS_LIST:\n      return {\n        ...state,\n        listTournaments: [...action.payload],\n      };\n    case SET_TOURNAMENT_INFO:\n      return {\n        ...state,\n        tournamentInfo: action.payload,\n      };\n    case SET_TEAM_INFO:\n      return {\n        ...state,\n        teamInfo: action.payload,\n      };\n    default: {\n      return state;\n    }\n  }\n};\n","import { ActionTypes } from './../actions/types';\nimport { TOGGLE_THEME } from '../actionTypes';\n\nexport type AppState = {\n  theme: string;\n};\n\nconst initialState: AppState = {\n  theme: 'light',\n};\n\nexport const appReducer = (state = initialState, action: ActionTypes): AppState => {\n  switch (action.type) {\n    case TOGGLE_THEME: {\n      return {\n        ...state,\n        theme: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport { profileReducer, ProfileState } from './profileReducer';\nimport { tournamentReducer, TournamentState } from './tournamentReducer';\nimport { appReducer, AppState } from './appReducer';\n\nexport interface ApplicationState {\n  tournament: TournamentState;\n  profile: ProfileState;\n  app: AppState;\n}\n\nexport const rootReducer = combineReducers<ApplicationState>({\n  tournament: tournamentReducer,\n  profile: profileReducer,\n  app: appReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  whitelist: ['profile', 'app'],\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { persistor, store } from './redux';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\n\nconst app = (\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>\n);\n\nReactDOM.render(<React.StrictMode>{app}</React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}